<?xml version="1.0" encoding="UTF-8"?>
<rxb:regexbuddy xmlns:rxb="http://www.regexbuddy.com/regexbuddy49.xsd" version="4.9">
	<libraryfile>
		<action id="CharactersConvertCurlySngleQuotes" purpose="replace" multiline="1">
			<flavor>
				<builtin>python37</builtin>
			</flavor>
			<regex>[‘’]</regex>
			<replace>'</replace>
			<description>Characters: Convert Curly Sngle Quotes</description>
		</action>
		<action id="EnvironmentymlRemoveBuiltins" purpose="replace" multiline="1">
			<flavor>
				<builtin>python37</builtin>
			</flavor>
			<regex>[\r\n]+    - (__future__|__main__|_thread|abc|aifc|argparse|array|ast|asynchat|asyncio|asyncore|atexit|audioop|base64|bdb|binascii|binhex|bisect|builtins|bz2|calendar|cgi|cgitb|chunk|cmath|cmd|code|codecs|codeop|collections|colorsys|compileall|concurrent|configparser|contextlib|contextvars|copy|copyreg|cProfile|csv|ctypes|dataclasses|datetime|dbm|decimal|difflib|dis|distutils|doctest|email|encodings|ensurepip|enum|errno|faulthandler|filecmp|fileinput|fnmatch|formatter|fractions|ftplib|functools|gc|getopt|getpass|gettext|glob|graphlib|gzip|hashlib|heapq|hmac|html|http|imaplib|imghdr|imp|importlib|inspect|io|ipaddress|itertools|json|keyword|lib2to3|linecache|locale|logging|lzma|mailbox|mailcap|marshal|math|mimetypes|mmap|modulefinder|msilib|msvcrt|multiprocessing|netrc|nntplib|numbers|operator|optparse|os|parser|pathlib|pdb|pickle|pickletools|pkgutil|platform|plistlib|poplib|pprint|profile|pstats|py_compile|pyclbr|pydoc|queue|quopri|random|re|reprlib|rlcompleter|runpy|sched|secrets|select|selectors|shelve|shlex|shutil|signal|site|smtpd|smtplib|sndhdr|socket|socketserver|sqlite3|ssl|stat|statistics|string|stringprep|struct|subprocess|sunau|symbol|symtable|sys|sysconfig|tabnanny|tarfile|telnetlib|tempfile|test|textwrap|threading|time|timeit|tkinter|token|tokenize|trace|traceback|tracemalloc|turtle|turtledemo|types|typing|unicodedata|unittest|urllib|uu|uuid|venv|warnings|wave|weakref|webbrowser|winreg|winsound|wsgiref|xdrlib|xml|xmlrpc|zipapp|zipfile|zipimport|zlib|zoneinfo)$</regex>
			<description>Environment.yml: Remove Builtins</description>
		</action>
		<action id="IPythonsurroundstore_objectsintrycatch" purpose="replace" multiline="1">
			<flavor>
				<builtin>python37</builtin>
			</flavor>
			<regex>"([^"]+)",\n    "s\.store_objects\(([^\(=]+)=\2\)</regex>
			<replace>"try:\\n",\n    "    \2 = s.load_object('\2')\\n",\n    "except:\\n",\n    "    \1",\n    "    s.store_objects(\2=\2)</replace>
			<description>IPython: surround store_objects in try/catch</description>
		</action>
		<action id="LinesAppendcarriagereturntononblanklines" purpose="replace" multiline="1" namedduplicate="1">
			<flavor>
				<builtin>csharp20</builtin>
			</flavor>
			<regex>(?&lt;![\r\n])[\r\n]{1}(?![\r\n])</regex>
			<replace>&#13;&#10;&#13;&#10;</replace>
			<description>Lines: Append carriage return to non-blank lines</description>
		</action>
		<action id="LinesConverttabstospaces" purpose="replace" multiline="1" namedduplicate="1">
			<flavor>
				<builtin>csharp20</builtin>
			</flavor>
			<regex>\t</regex>
			<replace>   </replace>
			<description>Lines: Convert tabs to spaces</description>
		</action>
		<action id="LinesRemovesemicolonsatendings" purpose="replace" multiline="1" namedduplicate="1">
			<flavor>
				<builtin>csharp20</builtin>
			</flavor>
			<regex>;$</regex>
			<description>Lines: Remove semicolons at endings</description>
		</action>
		<action id="LinesRemovetrailingspaces" purpose="replace" multiline="1" namedduplicate="1">
			<flavor>
				<builtin>csharp20</builtin>
			</flavor>
			<regex>[ \t]+$</regex>
			<description>Lines: Remove trailing spaces</description>
		</action>
		<action id="PythonConvert2spaceindentationtotabs" purpose="replace" caseless="1" multiline="1">
			<flavor>
				<builtin>python36</builtin>
			</flavor>
			<regex>^(\t*)  </regex>
			<replace>\g&lt;1>\t</replace>
			<description>Python: Convert 2-space indentation to tabs</description>
		</action>
		<action id="PythonConverttabsto4spaces" purpose="replace" caseless="1" multiline="1">
			<flavor>
				<builtin>python36</builtin>
			</flavor>
			<regex>\t</regex>
			<replace>    </replace>
			<description>Python: Convert tabs to 4 spaces</description>
		</action>
		<action id="Pythoncorrectlyspacecommas" purpose="replace" multiline="1" namedduplicate="1">
			<flavor>
				<builtin>csharp20</builtin>
			</flavor>
			<regex>\s*,\s*</regex>
			<replace>, </replace>
			<description>Python: correctly space commas</description>
		</action>
		<action id="PythonFindImportLibraries" multiline="1">
			<flavor>
				<builtin>python37</builtin>
			</flavor>
			<regex>\b(?:from +([^ \.\r\n]+)(?:\.[^ \r\n]+)? +import +\S+|import +([^ \.\r\n\\]+))(?:\\n",)?</regex>
			<replace>    - \1</replace>
			<description>Python: Find Import Libraries</description>
		</action>
		<action id="PythonFitcommentlinesagainstnextcodeline" purpose="replace" caseless="1" multiline="1" namedduplicate="1">
			<flavor>
				<builtin>perl526</builtin>
			</flavor>
			<regex>^([ \t]*)#\s*([^\r\n]+)[\r\n]+\1([^#\r\n])</regex>
			<replace>${1}# \u${2}\n${1}${3}</replace>
			<description>Python: Fit comment lines against next code line</description>
		</action>
		<action id="Pythonparenthprintstatement" purpose="replace" caseless="1">
			<flavor>
				<builtin>python36</builtin>
			</flavor>
			<regex>print\s+([^(])([^\r\n]+)</regex>
			<replace>print(\g&lt;1>\g&lt;2>)</replace>
			<description>Python: parenth print statement</description>
		</action>
		<action id="PythonRemoveendingsemicolons" purpose="replace" caseless="1" multiline="1">
			<flavor>
				<builtin>python36</builtin>
			</flavor>
			<regex>;$</regex>
			<description>Python: Remove ending semicolons</description>
		</action>
		<action id="PythonReplacecurlysinglequotes" purpose="replace" multiline="1" namedduplicate="1">
			<flavor>
				<builtin>csharp20</builtin>
			</flavor>
			<regex>|</regex>
			<replace>'</replace>
			<description>Python: Replace curly single quotes</description>
		</action>
		<action id="PythonReplacedoublequoteswithsingle" purpose="replace" multiline="1" namedduplicate="1">
			<flavor>
				<builtin>csharp20</builtin>
			</flavor>
			<regex>"([^'"]*)"</regex>
			<replace>'${1}'</replace>
			<description>Python: Replace double quotes with single</description>
		</action>
		<action id="PythonSpacefirstequalssignonline" purpose="replace" caseless="1" multiline="1">
			<flavor>
				<builtin>python36</builtin>
			</flavor>
			<regex>^([^=\r\n]*)([^ \r\n])=([^ =\r\n])</regex>
			<replace>\g&lt;1>\g&lt;2> = \g&lt;3></replace>
			<description>Python: Space first equals sign on line</description>
		</action>
		<action id="PythonUpdateprintto36" purpose="replace" multiline="1" namedduplicate="1">
			<flavor>
				<builtin>csharp20</builtin>
			</flavor>
			<regex>\bprint[ \t]+([^\\]+\\\s+[^\r\n]+|[^\r\n]+)</regex>
			<replace>print(${1})</replace>
			<description>Python: Update print to 3.6</description>
		</action>
		<action id="RegexEscapemetacharacters" purpose="replace" multiline="1">
			<flavor>
				<builtin>python37</builtin>
			</flavor>
			<regex>([]\[{}()*+?.\\^$|])</regex>
			<replace>\\\g&lt;1></replace>
			<description>Regex: Escape metacharacters</description>
		</action>
		<action id="SklearnConvertBestparameterssettoPipeline" purpose="replace" multiline="1">
			<flavor>
				<builtin>python37</builtin>
			</flavor>
			<regex>        (vect|tfidf|clf)__([^:]+): ([^\r\n]+)</regex>
			<replace>    '\1__\2': (\3,),</replace>
			<description>Sklearn: Convert Best parameters set to Pipeline</description>
			<testdata format="win1252">CiAgICAgICAgY2xmX19DOiA4NS4wCiAgICAgICAgY2xmX19jbGFzc193ZWlnaHQ6ICdiYWxhbmNlZCcKICAgICAgICBjbGZfX2R1YWw6IEZhbHNlCiAgICAgICAgY2xmX19maXRfaW50ZXJjZXB0OiBUcnVlCiAgICAgICAgY2xmX19tYXhfaXRlcjogNgogICAgICAgIGNsZl9fcGVuYWx0eTogJ2wyJwogICAgICAgIGNsZl9fc29sdmVyOiAnc2FnJwogICAgICAgIGNsZl9fdG9sOiAxZS0wOAogICAgICAgIHRmaWRmX19ub3JtOiAnbDInCiAgICAgICAgdGZpZGZfX3Ntb290aF9pZGY6IFRydWUKICAgICAgICB0ZmlkZl9fc3VibGluZWFyX3RmOiBGYWxzZQogICAgICAgIHRmaWRmX191c2VfaWRmOiBUcnVlCiAgICAgICAgdmVjdF9fYW5hbHl6ZXI6ICdjaGFyX3diJwogICAgICAgIHZlY3RfX2JpbmFyeTogVHJ1ZQogICAgICAgIHZlY3RfX2RlY29kZV9lcnJvcjogJ3N0cmljdCcKICAgICAgICB2ZWN0X19sb3dlcmNhc2U6IEZhbHNlCiAgICAgICAgdmVjdF9fbWF4X2RmOiAwLjUKICAgICAgICB2ZWN0X19tYXhfZmVhdHVyZXM6IDEwMAogICAgICAgIHZlY3RfX21pbl9kZjogMC4wCiAgICAgICAgdmVjdF9fbmdyYW1fcmFuZ2U6ICgxLCAyKQogICAgICAgIHZlY3RfX3N0b3Bfd29yZHM6ICdlbmdsaXNoJwogICAgICAgIHZlY3RfX3N0cmlwX2FjY2VudHM6ICdhc2NpaSc=</testdata>
		</action>
		<action id="SklearnConvertUserGuideParameterstoDict" purpose="replace" multiline="1">
			<flavor>
				<builtin>python37</builtin>
			</flavor>
			<regex>        (vect|tfidf|clf)__([^:]+): ([^\r\n]+)[\r\n]*</regex>
			<replace>'\2': \3, </replace>
			<description>Sklearn: Convert User Guide Parameters to Dict</description>
			<testdata format="win1252">CiAgICAgICAgY2xmX19DOiA4NS4wCiAgICAgICAgY2xmX19jbGFzc193ZWlnaHQ6ICdiYWxhbmNlZCcKICAgICAgICBjbGZfX2R1YWw6IEZhbHNlCiAgICAgICAgY2xmX19maXRfaW50ZXJjZXB0OiBUcnVlCiAgICAgICAgY2xmX19tYXhfaXRlcjogNgogICAgICAgIGNsZl9fcGVuYWx0eTogJ2wyJwogICAgICAgIGNsZl9fc29sdmVyOiAnc2FnJwogICAgICAgIGNsZl9fdG9sOiAxZS0wOAogICAgICAgIHRmaWRmX19ub3JtOiAnbDInCiAgICAgICAgdGZpZGZfX3Ntb290aF9pZGY6IFRydWUKICAgICAgICB0ZmlkZl9fc3VibGluZWFyX3RmOiBGYWxzZQogICAgICAgIHRmaWRmX191c2VfaWRmOiBUcnVlCiAgICAgICAgdmVjdF9fYW5hbHl6ZXI6ICdjaGFyX3diJwogICAgICAgIHZlY3RfX2JpbmFyeTogVHJ1ZQogICAgICAgIHZlY3RfX2RlY29kZV9lcnJvcjogJ3N0cmljdCcKICAgICAgICB2ZWN0X19sb3dlcmNhc2U6IEZhbHNlCiAgICAgICAgdmVjdF9fbWF4X2RmOiAwLjUKICAgICAgICB2ZWN0X19tYXhfZmVhdHVyZXM6IDEwMAogICAgICAgIHZlY3RfX21pbl9kZjogMC4wCiAgICAgICAgdmVjdF9fbmdyYW1fcmFuZ2U6ICgxLCAyKQogICAgICAgIHZlY3RfX3N0b3Bfd29yZHM6ICdlbmdsaXNoJwogICAgICAgIHZlY3RfX3N0cmlwX2FjY2VudHM6ICdhc2NpaSc=</testdata>
		</action>
		<action id="URLDifferentURLpartsnamedcapture" caseless="1" namedduplicate="1">
			<flavor>
				<builtin>perl522</builtin>
			</flavor>
			<regex>\b(?&lt;protocol>https?|ftp)://(?&lt;domain>[-A-Z0-9.]+)(?&lt;file>/[-A-Z0-9+&amp;@#/%=~_|!:,.;]*)?(?&lt;parameters>\?[A-Z0-9+&amp;@#/%=~_|!:,.;]*)?</regex>
			<description>URL: Different URL parts (named capture)</description>
		</action>
		<action id="URLFindinfulltextprotocoloptional" caseless="1" namedduplicate="1">
			<flavor>
				<builtin>perl522</builtin>
			</flavor>
			<regex>\b(?:(?:https?|ftp|file)://|www\.|ftp\.)[-A-Z0-9+&amp;@#/%=~_|$?!:,.]*[A-Z0-9+&amp;@#/%=~_|$]</regex>
			<description>URL: Find in full text (protocol optional)</description>
		</action>
		<action id="WordsWrapat80characters" purpose="replace" multiline="1" namedduplicate="1" testautolinebreaks="1">
			<flavor>
				<builtin>perl526</builtin>
			</flavor>
			<regex>(.{1,80})(\h+\R?|\R)</regex>
			<replace>\1\r\n</replace>
			<description>Words: Wrap at 80 characters</description>
			<testdata format="win1252">V2UnbGwgcHV0IHRoZSB4eSBjb29yZGluYXRlcyBpbiBhIHBhbmRhcyBkYXRhZnJhbWUgc28gdGhhdCB3ZSBjYW4gZWFzaWx5IHBlcmZvcm0gY2x1c3RlcmluZywgZ3JvdXAgYnkgdGhlIGNsdXN0ZXJzLCBhbmQgYXNzaWduIGVhY2ggaXRzIG93biBwbGFjZSBpbiB0aGUgeSBkaW1lbnNpb24u</testdata>
		</action>
	</libraryfile>
</rxb:regexbuddy>
