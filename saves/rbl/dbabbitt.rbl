<?xml version="1.0" encoding="UTF-8"?>
<rxb:regexbuddy xmlns:rxb="http://www.regexbuddy.com/regexbuddy49.xsd" version="4.9">
	<libraryfile>
		<action id="LinesAppendcarriagereturntononblanklines" purpose="replace" multiline="1" namedduplicate="1">
			<flavor>
				<builtin>csharp20</builtin>
			</flavor>
			<regex>(?&lt;![\r\n])[\r\n]{1}(?![\r\n])</regex>
			<replace>&#13;&#10;&#13;&#10;</replace>
			<description>Lines: Append carriage return to non-blank lines</description>
		</action>
		<action id="LinesConverttabstospaces" purpose="replace" multiline="1" namedduplicate="1">
			<flavor>
				<builtin>csharp20</builtin>
			</flavor>
			<regex>\t</regex>
			<replace>   </replace>
			<description>Lines: Convert tabs to spaces</description>
		</action>
		<action id="LinesRemovesemicolonsatendings" purpose="replace" multiline="1" namedduplicate="1">
			<flavor>
				<builtin>csharp20</builtin>
			</flavor>
			<regex>;$</regex>
			<description>Lines: Remove semicolons at endings</description>
		</action>
		<action id="LinesRemovetrailingspaces" purpose="replace" multiline="1" namedduplicate="1">
			<flavor>
				<builtin>csharp20</builtin>
			</flavor>
			<regex>[ \t]+$</regex>
			<description>Lines: Remove trailing spaces</description>
		</action>
		<action id="PythonConvert2spaceindentationtotabs" purpose="replace" caseless="1" multiline="1">
			<flavor>
				<builtin>python36</builtin>
			</flavor>
			<regex>^(\t*)  </regex>
			<replace>\g&lt;1>\t</replace>
			<description>Python: Convert 2-space indentation to tabs</description>
		</action>
		<action id="PythonConverttabsto4spaces" purpose="replace" caseless="1" multiline="1">
			<flavor>
				<builtin>python36</builtin>
			</flavor>
			<regex>\t</regex>
			<replace>    </replace>
			<description>Python: Convert tabs to 4 spaces</description>
		</action>
		<action id="Pythoncorrectlyspacecommas" purpose="replace" multiline="1" namedduplicate="1">
			<flavor>
				<builtin>csharp20</builtin>
			</flavor>
			<regex>\s*,\s*</regex>
			<replace>, </replace>
			<description>Python: correctly space commas</description>
		</action>
		<action id="PythonFitcommentlinesagainstnextcodeline" purpose="replace" caseless="1" multiline="1" namedduplicate="1">
			<flavor>
				<builtin>perl526</builtin>
			</flavor>
			<regex>^([ \t]*)#\s*([^\r\n]+)[\r\n]+\1([^#\r\n])</regex>
			<replace>${1}# \u${2}\n${1}${3}</replace>
			<description>Python: Fit comment lines against next code line</description>
		</action>
		<action id="Pythonparenthprintstatement" purpose="replace" caseless="1">
			<flavor>
				<builtin>python36</builtin>
			</flavor>
			<regex>print\s+([^(])([^\r\n]+)</regex>
			<replace>print(\g&lt;1>\g&lt;2>)</replace>
			<description>Python: parenth print statement</description>
		</action>
		<action id="PythonRemoveendingsemicolons" purpose="replace" caseless="1" multiline="1">
			<flavor>
				<builtin>python36</builtin>
			</flavor>
			<regex>;$</regex>
			<description>Python: Remove ending semicolons</description>
		</action>
		<action id="PythonReplacecurlysinglequotes" purpose="replace" multiline="1" namedduplicate="1">
			<flavor>
				<builtin>csharp20</builtin>
			</flavor>
			<regex>|</regex>
			<replace>'</replace>
			<description>Python: Replace curly single quotes</description>
		</action>
		<action id="PythonReplacedoublequoteswithsingle" purpose="replace" multiline="1" namedduplicate="1">
			<flavor>
				<builtin>csharp20</builtin>
			</flavor>
			<regex>"([^'"]*)"</regex>
			<replace>'${1}'</replace>
			<description>Python: Replace double quotes with single</description>
		</action>
		<action id="PythonSpacefirstequalssignonline" purpose="replace" caseless="1" multiline="1">
			<flavor>
				<builtin>python36</builtin>
			</flavor>
			<regex>^([^=\r\n]*)([^ \r\n])=([^ =\r\n])</regex>
			<replace>\g&lt;1>\g&lt;2> = \g&lt;3></replace>
			<description>Python: Space first equals sign on line</description>
		</action>
		<action id="PythonUpdateprintto36" purpose="replace" multiline="1" namedduplicate="1">
			<flavor>
				<builtin>csharp20</builtin>
			</flavor>
			<regex>\bprint[ \t]+([^\\]+\\\s+[^\r\n]+|[^\r\n]+)</regex>
			<replace>print(${1})</replace>
			<description>Python: Update print to 3.6</description>
		</action>
		<action id="RegexEscapemetacharacters" purpose="replace" multiline="1">
			<flavor>
				<builtin>python37</builtin>
			</flavor>
			<regex>([]\[{}()*+?.\\^$|])</regex>
			<replace>\\\g&lt;1></replace>
			<description>Regex: Escape metacharacters</description>
		</action>
		<action id="URLDifferentURLpartsnamedcapture" caseless="1" namedduplicate="1">
			<flavor>
				<builtin>perl522</builtin>
			</flavor>
			<regex>\b(?&lt;protocol>https?|ftp)://(?&lt;domain>[-A-Z0-9.]+)(?&lt;file>/[-A-Z0-9+&amp;@#/%=~_|!:,.;]*)?(?&lt;parameters>\?[A-Z0-9+&amp;@#/%=~_|!:,.;]*)?</regex>
			<description>URL: Different URL parts (named capture)</description>
		</action>
		<action id="URLFindinfulltextprotocoloptional" caseless="1" namedduplicate="1">
			<flavor>
				<builtin>perl522</builtin>
			</flavor>
			<regex>\b(?:(?:https?|ftp|file)://|www\.|ftp\.)[-A-Z0-9+&amp;@#/%=~_|$?!:,.]*[A-Z0-9+&amp;@#/%=~_|$]</regex>
			<description>URL: Find in full text (protocol optional)</description>
		</action>
		<action id="WordsWrapat80characters" purpose="replace" multiline="1" namedduplicate="1" testautolinebreaks="1">
			<flavor>
				<builtin>perl526</builtin>
			</flavor>
			<regex>(.{1,80})(\h+\R?|\R)</regex>
			<replace>\1\r\n</replace>
			<description>Words: Wrap at 80 characters</description>
			<testdata format="win1252">V2UnbGwgcHV0IHRoZSB4eSBjb29yZGluYXRlcyBpbiBhIHBhbmRhcyBkYXRhZnJhbWUgc28gdGhhdCB3ZSBjYW4gZWFzaWx5IHBlcmZvcm0gY2x1c3RlcmluZywgZ3JvdXAgYnkgdGhlIGNsdXN0ZXJzLCBhbmQgYXNzaWduIGVhY2ggaXRzIG93biBwbGFjZSBpbiB0aGUgeSBkaW1lbnNpb24u</testdata>
		</action>
	</libraryfile>
</rxb:regexbuddy>
